name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Mobile App CI
  mobile:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/mobile

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'apps/mobile/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run TypeScript check
        run: yarn tsc --noEmit

      - name: Run ESLint
        run: yarn lint

      - name: Run tests
        run: yarn test --coverage --watchAll=false

  # Go API CI
  api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/api

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./services/api

  # Go Workers CI
  workers:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/workers

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./services/workers

  # Admin Web App CI
  admin:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/admin

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'apps/admin/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run TypeScript check
        run: yarn type-check

      - name: Run ESLint
        run: yarn lint

      - name: Build
        run: yarn build

  # API Schema Validation
  api-schema:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/api-schema

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'packages/api-schema/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Validate OpenAPI schema
        run: yarn validate
